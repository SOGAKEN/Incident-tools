# base image
FROM node:18 AS base

# Install required packages
RUN apt-get update && apt-get install -y tzdata && rm -rf /var/lib/apt/lists/*

# install packages
FROM base AS packages

WORKDIR /app/web

COPY package.json .
COPY package-lock.json .

# Update npm to the latest version
RUN npm install -g npm@latest

# Install dependencies with legacy-peer-deps
RUN npm install --legacy-peer-deps

# build resources
FROM base AS builder
WORKDIR /app/web
COPY --from=packages /app/web/ .
COPY . .

ENV NOTIFY_SERVICE_URL=http://localhost:8083
ENV AUTH_URL=http://localhost:8082
ENV DBPILOT_URL=http://localhost:8081/api/v1

RUN npm run build

# production stage
FROM base AS production

ENV NODE_ENV=production
ENV EDITION=SELF_HOSTED
ENV DEPLOY_ENV=PRODUCTION
ENV NOTIFY_SERVICE_URL=http://localhost:8083
ENV AUTH_URL=http://localhost:8082
ENV DBPILOT_URL=http://localhost:8081/api/v1
ENV PORT=3000
ENV NEXT_TELEMETRY_DISABLED=1

# set timezone
ENV TZ=UTC
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \
	echo $TZ > /etc/timezone

WORKDIR /app/web
COPY --from=builder /app/web/public ./public
COPY --from=builder /app/web/.next/standalone ./
COPY --from=builder /app/web/.next/static ./.next/static

COPY docker/pm2.json ./pm2.json
COPY docker/entrypoint.sh ./entrypoint.sh

# Install PM2 globally
RUN npm install -g pm2 \
	&& mkdir /.pm2 \
	&& chown -R 1001:0 /.pm2 /app/web \
	&& chmod -R g=u /.pm2 /app/web

ARG COMMIT_SHA
ENV COMMIT_SHA=${COMMIT_SHA}

USER 1001
EXPOSE 3000
ENTRYPOINT ["/bin/sh", "./entrypoint.sh"]
